{"ast":null,"code":"var _jsxFileName = \"/home/sergi/Documents/Repos/Reps/LinkedIn-clone/Front-End/src/routes/Home/Posts/Post/Reply.js\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport defaultPic from \"../../../../assets/defaultProfilePic.png\";\nimport axios from '../../../../API/baseURL/baseURL';\n\nclass Reply extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLiked: this.props.reply.is_liked_by_user\n    };\n\n    this.likeReply = () => {\n      this.setState({\n        isLiked: true\n      });\n      this.props.reply.is_liked = true;\n      this.props.reply.likes_count = this.props.reply.likes_count + 1;\n      let token = localStorage.getItem(\"accessToken\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      let replyData = {\n        vote: 1\n      };\n      axios.post(`/user/post/comment/reply/like/${this.props.replyId}/`, replyData, config).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.unlikeReply = () => {\n      this.setState({\n        isLiked: false\n      });\n      this.props.reply.is_liked = false;\n      this.props.reply.likes_count = this.props.reply.likes_count - 1;\n      let token = localStorage.getItem(\"accessToken\");\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      let replyData = {\n        vote: -1\n      };\n      axios.post(`/user/post/comment/reply/like/${this.props.replyId}/`, replyData, config).then(res => {\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    let reply = this.props.reply;\n    let replyUserImgSrc = reply.author_avatar;\n\n    if (replyUserImgSrc === null) {\n      replyUserImgSrc = defaultPic;\n    }\n\n    let likeButton = /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.unlikeReply,\n      style: {\n        backgroundColor: \"#edf0f5\",\n        borderRadius: \"3px\",\n        color: \"#0a66c2\"\n      },\n      className: \"like\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, \"Like\");\n\n    if (!this.state.isLiked) {\n      likeButton = /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.likeReply,\n        className: \"like\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, \"Like\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"comment reply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: replyUserImgSrc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"commentBlock\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"commentData\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"timeStamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, reply.posted_at), /*#__PURE__*/React.createElement(NavLink, {\n      to: `/user/${reply.author_id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, reply.author_name), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, reply.author_tagline)), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"actualComment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, reply.text)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, likeButton, /*#__PURE__*/React.createElement(\"i\", {\n      style: {\n        color: \"#0a66c2\"\n      },\n      class: \"likeComment likeReply fas fa-thumbs-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"commentLikeNum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, this.props.reply.likes_count))));\n  }\n\n}\n\nexport default Reply;","map":{"version":3,"sources":["/home/sergi/Documents/Repos/Reps/LinkedIn-clone/Front-End/src/routes/Home/Posts/Post/Reply.js"],"names":["React","Component","NavLink","defaultPic","axios","Reply","state","isLiked","props","reply","is_liked_by_user","likeReply","setState","is_liked","likes_count","token","localStorage","getItem","config","headers","Authorization","replyData","vote","post","replyId","then","res","console","log","catch","err","unlikeReply","render","replyUserImgSrc","author_avatar","likeButton","backgroundColor","borderRadius","color","width","posted_at","author_id","author_name","author_tagline","text"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport defaultPic from \"../../../../assets/defaultProfilePic.png\";\r\nimport axios from '../../../../API/baseURL/baseURL';\r\n\r\nclass Reply extends Component {\r\n  state = {\r\n    isLiked: this.props.reply.is_liked_by_user,\r\n  };\r\n\r\n  likeReply = () => {\r\n    this.setState({ isLiked: true });\r\n    this.props.reply.is_liked = true;\r\n    this.props.reply.likes_count = this.props.reply.likes_count + 1;\r\n    let token = localStorage.getItem(\"accessToken\");\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n    let replyData = {\r\n      vote: 1,\r\n    };\r\n    axios\r\n      .post(`/user/post/comment/reply/like/${this.props.replyId}/`, replyData, config)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n  };\r\n\r\n  unlikeReply = () => {\r\n    this.setState({ isLiked: false });\r\n    this.props.reply.is_liked = false;\r\n    this.props.reply.likes_count = this.props.reply.likes_count - 1;\r\n    let token = localStorage.getItem(\"accessToken\");\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n    let replyData = {\r\n      vote: -1,\r\n    };\r\n    axios\r\n      .post(`/user/post/comment/reply/like/${this.props.replyId}/`, replyData, config)\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    let reply = this.props.reply;\r\n    let replyUserImgSrc = reply.author_avatar;\r\n    if (replyUserImgSrc === null) {\r\n      replyUserImgSrc = defaultPic;\r\n    }\r\n\r\n    let likeButton = (\r\n      <span\r\n        onClick={this.unlikeReply}\r\n        style={{\r\n          backgroundColor: \"#edf0f5\",\r\n          borderRadius: \"3px\",\r\n          color: \"#0a66c2\",\r\n        }}\r\n        className=\"like\"\r\n      >\r\n        Like\r\n      </span>\r\n    );\r\n    if (!this.state.isLiked) {\r\n      likeButton = (\r\n        <span onClick={this.likeReply} className=\"like\">\r\n          Like\r\n        </span>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"comment reply\">\r\n        <img src={replyUserImgSrc} />\r\n        <div className=\"commentBlock\" style={{width:'100%'}}>\r\n          <div className=\"commentData\">\r\n          <span className='timeStamp'>{reply.posted_at}</span>\r\n            <NavLink to={`/user/${reply.author_id}`}>\r\n              <h6 className=\"name\">{reply.author_name}</h6>\r\n              <h6 className=\"tag\">{reply.author_tagline}</h6>\r\n            </NavLink>\r\n\r\n            <h6 className=\"actualComment\">{reply.text}</h6>\r\n          </div>\r\n\r\n          <div>\r\n            {likeButton}\r\n            <i\r\n              style={{ color: \"#0a66c2\" }}\r\n              class=\"likeComment likeReply fas fa-thumbs-up\"\r\n            ></i>\r\n            <span className=\"commentLikeNum\">{this.props.reply.likes_count}</span>\r\n            {/* <span className=\"commentLikeNum\">{reply.numLikes}</span> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reply;\r\n"]},"metadata":{},"sourceType":"module"}