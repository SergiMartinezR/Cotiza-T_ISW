{"ast":null,"code":"var _jsxFileName = \"/home/sergi/Documents/Repos/My_Repos/Cotiza-T_ISW/frontend/src/routes/Login/LoginForm/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: null,\n      password: null,\n      formErrors: {\n        email: \"\",\n        password: \"\"\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        this.props.submitHandler(this.state);\n      } else {// console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n\n    this.forgotPass = () => {\n      // if(this.state.email === null){\n      //   let alertData = {\n      //     alertData : 'Enter your Registered E-Mail!',\n      //     alertColor : 'danger'\n      //   }\n      //   this.props.showAlert(alertData);\n      //   return;\n      // }\n      this.props.redirectToOtpVerifcation(); // alert('Will redirect to OTP verification!');\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"formOneHead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"We've missed you!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"E-Mail :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: formErrors.email.length > 0 ? \"form-control error\" : \"form-control\",\n      name: \"email\",\n      placeholder: \"Enter your email\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), formErrors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, formErrors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Password :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: formErrors.password.length > 0 ? \"form-control error\" : \"form-control\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), formErrors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, formErrors.password), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"forgotPass\",\n      onClick: this.forgotPass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, \"Forgot password?\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-dark\",\n      style: {\n        width: '100%'\n      },\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/userSignup/register\",\n      className: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"newAccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"Create a new account?\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/sergi/Documents/Repos/My_Repos/Cotiza-T_ISW/frontend/src/routes/Login/LoginForm/LoginForm.js"],"names":["React","Component","Link","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","LoginForm","state","email","password","handleSubmit","e","preventDefault","props","submitHandler","handleChange","name","value","target","test","setState","forgotPass","redirectToOtpVerifcation","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst emailRegex = RegExp(\r\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach((val) => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  Object.values(rest).forEach((val) => {\r\n    val === null && (valid = false);\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    email: null,\r\n    password: null,\r\n    formErrors: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      this.props.submitHandler(this.state);\r\n    } else {\r\n      // console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value)\r\n          ? \"\"\r\n          : \"invalid email address\";\r\n        break;\r\n      case \"password\":\r\n        formErrors.password =\r\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ formErrors, [name]: value });\r\n  };\r\n\r\n  forgotPass = () => {\r\n    // if(this.state.email === null){\r\n    //   let alertData = {\r\n    //     alertData : 'Enter your Registered E-Mail!',\r\n    //     alertColor : 'danger'\r\n    //   }\r\n    //   this.props.showAlert(alertData);\r\n    //   return;\r\n    // }\r\n    this.props.redirectToOtpVerifcation();\r\n    // alert('Will redirect to OTP verification!');\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h5 className=\"formOneHead\">We've missed you!</h5>\r\n        <div className=\"form-group\">\r\n          <label>E-Mail :</label>\r\n          <input\r\n            type=\"email\"\r\n            className={\r\n              formErrors.email.length > 0\r\n                ? \"form-control error\"\r\n                : \"form-control\"\r\n            }\r\n            name=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          {formErrors.email.length > 0 && (\r\n            <span className=\"errorMessage\">{formErrors.email}</span>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Password :</label>\r\n          <input\r\n            type=\"password\"\r\n            className={formErrors.password.length > 0 ? \"form-control error\" : \"form-control\"}\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n\r\n          {formErrors.password.length > 0 && (\r\n            <span className=\"errorMessage\">{formErrors.password}</span>\r\n          )}\r\n          <h6 className=\"forgotPass\" onClick={this.forgotPass}>\r\n            Forgot password?\r\n          </h6>\r\n        </div>\r\n\r\n        <button className='btn btn-dark' style={{width:'100%'}} type=\"submit\">Sign In</button>\r\n        <Link to=\"/userSignup/register\" className=\"link\">\r\n          <h6 className='newAccount'>Create a new account?</h6>\r\n        </Link>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}