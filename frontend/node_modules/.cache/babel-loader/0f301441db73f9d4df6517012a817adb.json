{"ast":null,"code":"var _jsxFileName = \"/home/sergi/Documents/Repos/My_Repos/Cotiza-T_ISW/frontend/src/routes/Login/ForgotPassword/ForgotPassword.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"../../../components/Navbar/Navbar\";\nimport FormOne from \"./ForgotPasswordForms/FormOne\";\nimport FormTwo from \"./ForgotPasswordForms/FormTwo\";\nimport CustomAlert from \"../../../components/CustomAlert/CustomAlert\";\nimport { Redirect } from \"react-router-dom\";\nimport Loader from \"../../../components/Loader/Loader\";\nimport checkSrc from \"../../../assets/check.gif\";\nimport axios from \"../../../API/baseURL/baseURL\";\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stage: this.props.match.params.id,\n      loading: null,\n      showAlert: null,\n      alertColor: null,\n      alertData: null,\n      redirect: null,\n      completed: null\n    };\n\n    this.sendOTP = details => {\n      localStorage.clear();\n      let userData = {\n        phone_number: details.phoneNumber\n      };\n      console.log(userData);\n      axios.post('/user/password/reset/', userData).then(res => {\n        console.log(res);\n        let userId = res.data.user_id;\n        localStorage.setItem('userID', userId);\n        this.setState({\n          showAlert: true,\n          alertColor: 'success',\n          alertData: 'OTP sent to entered phone number!'\n        });\n      }).catch(err => {\n        if (err.response.status === 404) {\n          this.setState({\n            showAlert: true,\n            alertColor: 'danger',\n            alertData: 'No account found, linked to entered number!'\n          });\n        }\n      }); //API call\n      //if phone number doesn't exists for any user...\n      // this.setState({\n      //   showAlert : true,\n      //   alertColor : 'danger',\n      //   alertData : 'No account found linked to entered phone number!'\n      // })\n      // if phone number exists\n      // this.setState({\n      //   showAlert: true,\n      //   alertColor: \"success\",\n      //   alertData: \"OTP has been sent to your registered phone number!\",\n      // });\n    };\n\n    this.verifyOTP = details => {\n      console.log(details);\n      this.setState({\n        showAlert: true,\n        alertColor: \"success\",\n        alertData: \"Wait while we verify your phone number...\"\n      });\n      let verifyData = {\n        phone_number: details.phoneNumber,\n        otp: details.otp\n      };\n      axios.post(\"/user/password/reset/otp/verify/\", verifyData).then(res => {\n        console.log(res);\n\n        if (res.status === 200) {\n          let resetAccessToken = res.data.access;\n          localStorage.setItem('resetAccessToken', resetAccessToken);\n          this.setState({\n            showAlert: true,\n            alertColor: \"success\",\n            alertData: \"Verified! Reset your password...Redirecting!\"\n          });\n          setTimeout(() => {\n            this.setState({\n              showAlert: false,\n              redirect: true\n            });\n          }, 4000);\n        }\n      }).catch(err => {\n        if (err.response.status === 400) {\n          this.setState({\n            showAlert: true,\n            alertColor: \"danger\",\n            alertData: \"OTP has expired!\"\n          });\n        }\n\n        if (err.response.status === 403) {\n          this.setState({\n            showAlert: true,\n            alertColor: \"danger\",\n            alertData: \"OTP entered is incorrect!\"\n          });\n        }\n      }); // API call\n      //if OTP doesn't match\n      // this.setState({\n      //   showAlert : true,\n      //   alertColor : 'danger',\n      //   alertData : 'OTP entered is incorrect!'\n      // })\n      // if OTP did match\n    };\n\n    this.submitFormTwo = details => {\n      console.log(details);\n      let userId = localStorage.getItem('userID');\n      let refreshToken = localStorage.getItem('resetAccessToken');\n      this.setState({\n        loading: true\n      }); // let resetDetails = {\n      //   headers: {\n      //     'Authorization': `Bearer ${refreshToken}`\n      //   },\n      //   user_id : userId,\n      //   Password : details.password\n      // }\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${refreshToken}`\n        }\n      };\n      let resetPassData = {\n        user_id: userId,\n        password: details.password\n      };\n      axios.patch('/user/password/reset/new_password/', resetPassData, config).then(res => {\n        console.log(res);\n\n        if (res.status === 202) {\n          this.setState({\n            completed: true,\n            loading: false\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        });\n\n        if (err.response.status === 406) {\n          this.setState({\n            showAlert: true,\n            alertData: \"New password should not match your old password!\",\n            alertColor: 'danger'\n          });\n        }\n      }); // this.setState({ loading: true });\n      // setTimeout(() => {\n      //   this.setState({ loading: false, completed: true });\n      // }, 2500);\n    };\n\n    this.showAlert = alertDetails => {\n      this.setState({\n        showAlert: true,\n        alertData: alertDetails.alertData,\n        alertColor: alertDetails.alertColor\n      });\n    };\n\n    this.hidePopup = () => {\n      this.setState({\n        showAlert: null\n      });\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/forgotPassword/resetPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 14\n        }\n      });\n    }\n\n    let AlertData = null;\n\n    if (this.state.showAlert) {\n      AlertData = /*#__PURE__*/React.createElement(CustomAlert, {\n        hidePop: this.hidePopup,\n        color: this.state.alertColor,\n        content: this.state.alertData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      });\n    }\n\n    let formData = null;\n\n    if (this.state.stage === \"otpVerification\") {\n      formData = /*#__PURE__*/React.createElement(FormOne, {\n        showAlert: this.showAlert,\n        sendOTP: this.sendOTP,\n        verifyOTP: this.verifyOTP,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (this.state.stage === \"resetPassword\") {\n      formData = /*#__PURE__*/React.createElement(FormTwo, {\n        submitHandler: this.submitFormTwo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 18\n        }\n      });\n    }\n\n    if (this.state.loading) {\n      formData = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loaderWindow\",\n        style: {\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    if (this.state.completed) {\n      formData = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"formOneHead\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }\n      }, \"You've successfully changed your password!\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkGif\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: checkSrc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }\n    }), AlertData, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, formData)));\n  }\n\n}\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/sergi/Documents/Repos/My_Repos/Cotiza-T_ISW/frontend/src/routes/Login/ForgotPassword/ForgotPassword.js"],"names":["React","Component","Navbar","FormOne","FormTwo","CustomAlert","Redirect","Loader","checkSrc","axios","ForgotPassword","state","stage","props","match","params","id","loading","showAlert","alertColor","alertData","redirect","completed","sendOTP","details","localStorage","clear","userData","phone_number","phoneNumber","console","log","post","then","res","userId","data","user_id","setItem","setState","catch","err","response","status","verifyOTP","verifyData","otp","resetAccessToken","access","setTimeout","submitFormTwo","getItem","refreshToken","config","headers","Authorization","resetPassData","password","patch","alertDetails","hidePopup","render","AlertData","formData","margin"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Navbar from \"../../../components/Navbar/Navbar\";\r\nimport FormOne from \"./ForgotPasswordForms/FormOne\";\r\nimport FormTwo from \"./ForgotPasswordForms/FormTwo\";\r\nimport CustomAlert from \"../../../components/CustomAlert/CustomAlert\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\nimport checkSrc from \"../../../assets/check.gif\";\r\nimport axios from \"../../../API/baseURL/baseURL\";\r\n\r\nclass ForgotPassword extends Component {\r\n  state = {\r\n    stage: this.props.match.params.id,\r\n    loading: null,\r\n    showAlert: null,\r\n    alertColor: null,\r\n    alertData: null,\r\n    redirect: null,\r\n    completed: null,\r\n  };\r\n\r\n  sendOTP = (details) => {\r\n    localStorage.clear();\r\n    let userData = {\r\n      phone_number: details.phoneNumber,\r\n    };\r\n    console.log(userData);\r\n    axios.post('/user/password/reset/',userData)\r\n      .then((res)=>{\r\n        console.log(res);\r\n        let userId = res.data.user_id;\r\n        localStorage.setItem('userID',userId);\r\n        this.setState({\r\n          showAlert : true,\r\n          alertColor : 'success',\r\n          alertData : 'OTP sent to entered phone number!'\r\n        })\r\n      })\r\n      .catch((err)=>{\r\n        if(err.response.status === 404){\r\n          this.setState({\r\n            showAlert : true,\r\n            alertColor : 'danger',\r\n            alertData : 'No account found, linked to entered number!'\r\n          })\r\n        }\r\n      })\r\n\r\n    //API call\r\n    //if phone number doesn't exists for any user...\r\n    // this.setState({\r\n    //   showAlert : true,\r\n    //   alertColor : 'danger',\r\n    //   alertData : 'No account found linked to entered phone number!'\r\n    // })\r\n\r\n    // if phone number exists\r\n    // this.setState({\r\n    //   showAlert: true,\r\n    //   alertColor: \"success\",\r\n    //   alertData: \"OTP has been sent to your registered phone number!\",\r\n    // });\r\n  };\r\n\r\n  verifyOTP = (details) => {\r\n    console.log(details);\r\n    this.setState({\r\n      showAlert: true,\r\n      alertColor: \"success\",\r\n      alertData: \"Wait while we verify your phone number...\",\r\n    });\r\n    let verifyData = {\r\n      phone_number: details.phoneNumber,\r\n      otp: details.otp,\r\n    };\r\n    axios.post(\"/user/password/reset/otp/verify/\", verifyData)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.status === 200) {\r\n          let resetAccessToken = res.data.access;\r\n          localStorage.setItem('resetAccessToken',resetAccessToken);\r\n          this.setState({\r\n            showAlert: true,\r\n            alertColor: \"success\",\r\n            alertData:\r\n              \"Verified! Reset your password...Redirecting!\",\r\n          });\r\n          setTimeout(() => {\r\n            this.setState({ showAlert: false, redirect: true });\r\n          }, 4000);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 400) {\r\n          this.setState({\r\n            showAlert: true,\r\n            alertColor: \"danger\",\r\n            alertData: \"OTP has expired!\",\r\n          });\r\n        }\r\n        if (err.response.status === 403) {\r\n          this.setState({\r\n            showAlert: true,\r\n            alertColor: \"danger\",\r\n            alertData: \"OTP entered is incorrect!\",\r\n          });\r\n        }\r\n      });\r\n\r\n\r\n    // API call\r\n    //if OTP doesn't match\r\n    // this.setState({\r\n    //   showAlert : true,\r\n    //   alertColor : 'danger',\r\n    //   alertData : 'OTP entered is incorrect!'\r\n    // })\r\n\r\n    // if OTP did match\r\n  };\r\n\r\n  submitFormTwo = (details) => {\r\n\r\n    console.log(details);\r\n    let userId = localStorage.getItem('userID');\r\n    let refreshToken = localStorage.getItem('resetAccessToken');\r\n\r\n    this.setState({loading : true});\r\n\r\n    // let resetDetails = {\r\n    //   headers: {\r\n    //     'Authorization': `Bearer ${refreshToken}`\r\n    //   },\r\n    //   user_id : userId,\r\n    //   Password : details.password\r\n    // }\r\n    const config = {\r\n      headers: { Authorization: `Bearer ${refreshToken}`},\r\n    };\r\n    let resetPassData = {\r\n      user_id : userId,\r\n      password : details.password\r\n    }\r\n    axios.patch('/user/password/reset/new_password/',resetPassData,config)\r\n      .then((res)=>{\r\n        console.log(res);\r\n        if(res.status === 202){\r\n          this.setState({\r\n            completed : true,\r\n            loading : false\r\n          })\r\n        }\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err);\r\n        this.setState({loading : false});\r\n        if(err.response.status === 406){\r\n          this.setState({\r\n            showAlert : true,\r\n            alertData : \"New password should not match your old password!\",\r\n            alertColor : 'danger',\r\n          })\r\n        }\r\n      })\r\n\r\n\r\n    // this.setState({ loading: true });\r\n    // setTimeout(() => {\r\n    //   this.setState({ loading: false, completed: true });\r\n    // }, 2500);\r\n  };\r\n\r\n  showAlert = (alertDetails) => {\r\n    this.setState({\r\n      showAlert: true,\r\n      alertData: alertDetails.alertData,\r\n      alertColor: alertDetails.alertColor,\r\n    });\r\n  };\r\n\r\n  hidePopup = () => {\r\n    this.setState({ showAlert: null });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/forgotPassword/resetPassword\" />;\r\n    }\r\n\r\n    let AlertData = null;\r\n    if (this.state.showAlert) {\r\n      AlertData = (\r\n        <CustomAlert\r\n          hidePop={this.hidePopup}\r\n          color={this.state.alertColor}\r\n          content={this.state.alertData}\r\n        />\r\n      );\r\n    }\r\n\r\n    let formData = null;\r\n    if (this.state.stage === \"otpVerification\") {\r\n      formData = (\r\n        <FormOne\r\n          showAlert={this.showAlert}\r\n          sendOTP={this.sendOTP}\r\n          verifyOTP={this.verifyOTP}\r\n        />\r\n      );\r\n    }\r\n    if (this.state.stage === \"resetPassword\") {\r\n      formData = <FormTwo submitHandler={this.submitFormTwo} />;\r\n    }\r\n    if (this.state.loading) {\r\n      formData = (\r\n        <div className=\"loaderWindow\" style={{ margin: \"auto\" }}>\r\n          <Loader />\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state.completed) {\r\n      formData = (\r\n        <>\r\n          <h5 className=\"formOneHead\">\r\n            You've successfully changed your password!\r\n          </h5>\r\n          <div className=\"checkGif\">\r\n            <img src={checkSrc} />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        {AlertData}\r\n        <div className=\"loginBody\">\r\n          <div className=\"loginForm\">{formData}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgotPassword;\r\n"]},"metadata":{},"sourceType":"module"}