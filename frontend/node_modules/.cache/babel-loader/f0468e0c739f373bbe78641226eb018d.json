{"ast":null,"code":"var _jsxFileName = \"/home/sergi/Documents/Repos/My_Repos/Cotiza-T_ISW/frontend/src/routes/PostJob/PostJobForm.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst nameRegex = RegExp(/^[a-zA-Z_-]{0,30}$/);\nconst lastnameRegex = RegExp(/^[a-zA-Z\\s]+$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n  // console.log('Val :')\n\n  Object.values(rest).forEach(val => {//   // if(val !== 'selectedFile'){\n    //     val === null && (valid = false);\n    //   // }\n  });\n  return valid;\n};\n\nclass FormTwo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      jobTitle: null,\n      company: null,\n      location: null,\n      employmentType: \"Tiempo completo\",\n      description: null,\n      skillsRequired: null,\n      industry: null,\n      payRange: null,\n      companyLogo: null,\n      formErrors: {\n        jobTitle: \"\",\n        company: \"\",\n        location: \"\",\n        employmentType: \"\",\n        description: \"\",\n        skillsRequired: \"\",\n        industry: \"\",\n        payRange: \"\",\n        companyLogo: \"\" // selectedFile: \"\"\n\n      }\n    };\n\n    this.fileChangedHandler = event => {\n      this.setState({\n        companyLogo: event.target.files[0]\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        this.props.submitForm(this.state);\n        console.log(this.state);\n        this.setState({\n          jobTitle: null,\n          company: null,\n          location: null,\n          employmentType: \"Tiempo completo\",\n          description: null,\n          skillsRequired: null,\n          industry: null,\n          payRange: null,\n          companyLogo: null,\n          formErrors: {\n            jobTitle: \"\",\n            company: \"\",\n            location: \"\",\n            employmentType: \"\",\n            description: \"\",\n            skillsRequired: \"\",\n            industry: \"\",\n            payRange: \"\",\n            companyLogo: \"\" // selectedFile: \"\"\n\n          }\n        });\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        // case \"firstName\":\n        //   formErrors.firstName =\n        //     (value.length < 3 && value.length > 0\n        //       ? \"minimum 3 characaters required\"\n        //       : \"\") ||\n        //     (formErrors.firstName = nameRegex.test(value)\n        //       ? \"\"\n        //       : \"only characters allowed!\");\n        //   break;\n        // case \"lastName\":\n        //   let spaceNum = 0;\n        //   for (let ch in value) {\n        //     if (value[ch] === \" \") {\n        //       spaceNum = spaceNum + 1;\n        //     }\n        //   }\n        //   formErrors.lastName =\n        //     (spaceNum > 1 ? \"more than one space prohibited\" : \"\") ||\n        //     (value.length < 3 ? \"minimum 3 characaters required\" : \"\") ||\n        //     (formErrors.lastName = lastnameRegex.test(value)\n        //       ? \"\"\n        //       : \"only characters allowed!\");\n        //   break;\n        case \"jobTitle\":\n          formErrors.jobTitle = value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\n          break;\n\n        case \"company\":\n          formErrors.company = value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\n          break;\n\n        case \"location\":\n          formErrors.location = value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\n          break;\n\n        case \"employmentType\":\n          formErrors.employmentType = value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\n          break;\n\n        case \"description\":\n          formErrors.description = value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\n          break;\n\n        case \"skillsRequired\":\n          formErrors.skillsRequired = value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\n          break;\n\n        case \"industry\":\n          formErrors.industry = value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\n          break;\n        // case \"payRange\":\n        //   formErrors.payRange =\n        //     value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        //   break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n  }\n\n  // handleClick = (e) => {\n  //   this.refs.fileUploader.click();\n  // }\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      className: \"signupFormTwo postJobForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 15\n      }\n    }, \"Titulo *\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      value: this.state.jobTitle,\n      className: formErrors.jobTitle.length > 0 ? \"error form-control\" : \"form-control\",\n      name: \"jobTitle\",\n      placeholder: \"\\xBFQu\\xE9 tipo de empleo ofreces?\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    })), formErrors.jobTitle.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, formErrors.jobTitle)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, \"Compa\\xF1\\xEDa *\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      value: this.state.company,\n      className: formErrors.company.length > 0 ? \"error form-control\" : \"form-control\",\n      name: \"company\",\n      placeholder: \"Last Name\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 15\n      }\n    })), formErrors.company.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, formErrors.company)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, \"Location *\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      value: this.state.location,\n      className: formErrors.location.length > 0 ? \"error form-control\" : \"form-control\",\n      name: \"location\",\n      placeholder: \"Your location\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    })), formErrors.location.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, formErrors.location)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, \"Employment Type *\"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"employmentType\",\n      onChange: this.handleChange,\n      className: formErrors.employmentType.length > 0 ? \"error form-control\" : \"form-control\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Fulltime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }, \"Full-Time\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Parttime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, \"Part-Time\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Contract\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }\n    }, \"Contract\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Temporary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }\n    }, \"Temporary\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Volunteer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, \"Volunteer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Internship\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }\n    }, \"Internship\"))), formErrors.employmentType.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }, formErrors.employmentType)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }, \"Job Description *\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      value: this.state.description,\n      className: formErrors.description.length > 0 ? \"error form-control\" : \"form-control\",\n      name: \"description\",\n      placeholder: \"Enter Institute or Industry\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    })), formErrors.description.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, formErrors.description)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 15\n      }\n    }, \"Skills Required *\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      value: this.state.skillsRequired,\n      className: formErrors.skillsRequired.length > 0 ? \"error form-control\" : \"form-control\",\n      name: \"skillsRequired\",\n      placeholder: \"Enter Institute or Industry\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 15\n      }\n    })), formErrors.skillsRequired.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 15\n      }\n    }, formErrors.skillsRequired)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 15\n      }\n    }, \"Related Industry *\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      value: this.state.industry,\n      className: formErrors.industry.length > 0 ? \"error form-control\" : \"form-control\",\n      name: \"industry\",\n      placeholder: \"Enter Institute or Industry\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 15\n      }\n    })), formErrors.industry.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 15\n      }\n    }, formErrors.industry)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 15\n      }\n    }, \"Pay Scale :\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      value: this.state.payRange,\n      className: formErrors.payRange.length > 0 ? \"error form-control\" : \"form-control\",\n      name: \"payRange\",\n      placeholder: \"Enter Institute or Industry\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 15\n      }\n    })), formErrors.payRange.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 15\n      }\n    }, formErrors.payRange)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 13\n      }\n    }, \"Comapny logo : \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"img\",\n      onChange: this.fileChangedHandler,\n      type: \"file\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-dark\",\n      style: {\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 13\n      }\n    }, \"Post Job\"))));\n  }\n\n}\n\nexport default FormTwo;","map":{"version":3,"sources":["/home/sergi/Documents/Repos/My_Repos/Cotiza-T_ISW/frontend/src/routes/PostJob/PostJobForm.js"],"names":["React","Component","Link","nameRegex","RegExp","lastnameRegex","formValid","formErrors","rest","valid","Object","values","forEach","val","length","FormTwo","state","jobTitle","company","location","employmentType","description","skillsRequired","industry","payRange","companyLogo","fileChangedHandler","event","setState","target","files","handleSubmit","e","preventDefault","props","submitForm","console","log","error","handleChange","name","value","render","width","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst nameRegex = RegExp(/^[a-zA-Z_-]{0,30}$/);\r\nconst lastnameRegex = RegExp(/^[a-zA-Z\\s]+$/);\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach((val) => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  // console.log('Val :')\r\n  Object.values(rest).forEach((val) => {\r\n    //   // if(val !== 'selectedFile'){\r\n    //     val === null && (valid = false);\r\n    //   // }\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass FormTwo extends Component {\r\n  state = {\r\n    jobTitle: null,\r\n    company: null,\r\n    location: null,\r\n    employmentType: \"Tiempo completo\",\r\n    description: null,\r\n    skillsRequired: null,\r\n    industry: null,\r\n    payRange: null,\r\n    companyLogo: null,\r\n    formErrors: {\r\n      jobTitle: \"\",\r\n      company: \"\",\r\n      location: \"\",\r\n      employmentType: \"\",\r\n      description: \"\",\r\n      skillsRequired: \"\",\r\n      industry: \"\",\r\n      payRange: \"\",\r\n      companyLogo: \"\",\r\n      // selectedFile: \"\"\r\n    },\r\n  };\r\n\r\n  fileChangedHandler = (event) => {\r\n    this.setState({ companyLogo: event.target.files[0] });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      this.props.submitForm(this.state);\r\n      console.log(this.state);\r\n      this.setState({\r\n        jobTitle: null,\r\n        company: null,\r\n        location: null,\r\n        employmentType: \"Tiempo completo\",\r\n        description: null,\r\n        skillsRequired: null,\r\n        industry: null,\r\n        payRange: null,\r\n        companyLogo: null,\r\n        formErrors: {\r\n          jobTitle: \"\",\r\n          company: \"\",\r\n          location: \"\",\r\n          employmentType: \"\",\r\n          description: \"\",\r\n          skillsRequired: \"\",\r\n          industry: \"\",\r\n          payRange: \"\",\r\n          companyLogo: \"\",\r\n          // selectedFile: \"\"\r\n        },\r\n      });\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  // handleStudentChange = () => {\r\n  //   let isUserStudent = this.state.isStudent;\r\n  //   this.setState({ isStudent: !isUserStudent });\r\n  //   console.log(this.state);\r\n  // };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      // case \"firstName\":\r\n      //   formErrors.firstName =\r\n      //     (value.length < 3 && value.length > 0\r\n      //       ? \"minimum 3 characaters required\"\r\n      //       : \"\") ||\r\n      //     (formErrors.firstName = nameRegex.test(value)\r\n      //       ? \"\"\r\n      //       : \"only characters allowed!\");\r\n      //   break;\r\n\r\n      // case \"lastName\":\r\n      //   let spaceNum = 0;\r\n      //   for (let ch in value) {\r\n      //     if (value[ch] === \" \") {\r\n      //       spaceNum = spaceNum + 1;\r\n      //     }\r\n      //   }\r\n      //   formErrors.lastName =\r\n      //     (spaceNum > 1 ? \"more than one space prohibited\" : \"\") ||\r\n      //     (value.length < 3 ? \"minimum 3 characaters required\" : \"\") ||\r\n      //     (formErrors.lastName = lastnameRegex.test(value)\r\n      //       ? \"\"\r\n      //       : \"only characters allowed!\");\r\n      //   break;\r\n\r\n      case \"jobTitle\":\r\n        formErrors.jobTitle =\r\n          value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\r\n        break;\r\n\r\n      case \"company\":\r\n        formErrors.company =\r\n          value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\r\n        break;\r\n\r\n      case \"location\":\r\n        formErrors.location =\r\n          value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\r\n        break;\r\n\r\n      case \"employmentType\":\r\n        formErrors.employmentType =\r\n          value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\r\n        break;\r\n\r\n      case \"description\":\r\n        formErrors.description =\r\n          value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\r\n        break;\r\n\r\n      case \"skillsRequired\":\r\n        formErrors.skillsRequired =\r\n          value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\r\n        break;\r\n\r\n      case \"industry\":\r\n        formErrors.industry =\r\n          value.length < 3 ? \"Se requieren al menos 3 caracteres\" : \"\";\r\n        break;\r\n\r\n      // case \"payRange\":\r\n      //   formErrors.payRange =\r\n      //     value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n      //   break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value });\r\n  };\r\n\r\n  // handleClick = (e) => {\r\n  //   this.refs.fileUploader.click();\r\n  // }\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {/* <h5 className=\"formOneHead formTwoHead\">Personal Details</h5> */}\r\n        {/* <i class=\"fas fa-plus-circle\" onClick={this.handleClick} style={{cursor:'pointer'}}></i>\r\n        <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}}/> */}\r\n        <form\r\n          encType=\"multipart/form-data\"\r\n          className=\"signupFormTwo postJobForm\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <div className=\"form-group\">\r\n            <div>\r\n              <label>Titulo *</label>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                value={this.state.jobTitle}\r\n                className={\r\n                  formErrors.jobTitle.length > 0\r\n                    ? \"error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"jobTitle\"\r\n                placeholder=\"¿Qué tipo de empleo ofreces?\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            {formErrors.jobTitle.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.jobTitle}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div>\r\n              <label>Compa&ntilde;&iacute;a *</label>\r\n              {/* <br></br> */}\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                value={this.state.company}\r\n                className={\r\n                  formErrors.company.length > 0\r\n                    ? \"error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"company\"\r\n                placeholder=\"Last Name\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            {formErrors.company.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.company}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div>\r\n              <label>Location *</label>\r\n              <br></br>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                value={this.state.location}\r\n                className={\r\n                  formErrors.location.length > 0\r\n                    ? \"error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"location\"\r\n                placeholder=\"Your location\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            {formErrors.location.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.location}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div>\r\n              <label>Employment Type *</label>\r\n              {/* <input\r\n                type=\"text\"\r\n                className={\r\n                  formErrors.employmentType.length > 0\r\n                    ? \"error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"employmentType\"\r\n                placeholder=\"Your position\"\r\n                onChange={this.handleChange}\r\n                required\r\n              /> */}\r\n              <select\r\n                name=\"employmentType\"\r\n                onChange={this.handleChange}\r\n                className={\r\n                  formErrors.employmentType.length > 0\r\n                    ? \"error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                required\r\n              >\r\n                <option value=\"Fulltime\">Full-Time</option>\r\n                <option value=\"Parttime\">Part-Time</option>\r\n                <option value=\"Contract\">Contract</option>\r\n                <option value=\"Temporary\">Temporary</option>\r\n                <option value=\"Volunteer\">Volunteer</option>\r\n                <option value=\"Internship\">Internship</option>\r\n              </select>\r\n            </div>\r\n            {formErrors.employmentType.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.employmentType}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div>\r\n              <label>Job Description *</label>\r\n              <br></br>\r\n              <textarea\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                value={this.state.description}\r\n                className={\r\n                  formErrors.description.length > 0\r\n                    ? \"error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"description\"\r\n                placeholder=\"Enter Institute or Industry\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            {formErrors.description.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.description}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div>\r\n              <label>Skills Required *</label>\r\n              <br></br>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                value={this.state.skillsRequired}\r\n                className={\r\n                  formErrors.skillsRequired.length > 0\r\n                    ? \"error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"skillsRequired\"\r\n                placeholder=\"Enter Institute or Industry\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            {formErrors.skillsRequired.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.skillsRequired}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div>\r\n              <label>Related Industry *</label>\r\n              <br></br>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                value={this.state.industry}\r\n                className={\r\n                  formErrors.industry.length > 0\r\n                    ? \"error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"industry\"\r\n                placeholder=\"Enter Institute or Industry\"\r\n                onChange={this.handleChange}\r\n                required\r\n              />\r\n            </div>\r\n            {formErrors.industry.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.industry}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <div>\r\n              <label>Pay Scale :</label>\r\n              <br></br>\r\n              <input\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                value={this.state.payRange}\r\n                className={\r\n                  formErrors.payRange.length > 0\r\n                    ? \"error form-control\"\r\n                    : \"form-control\"\r\n                }\r\n                name=\"payRange\"\r\n                placeholder=\"Enter Institute or Industry\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            {formErrors.payRange.length > 0 && (\r\n              <span className=\"errorMessage\">{formErrors.payRange}</span>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Comapny logo : </label>\r\n            <br></br>\r\n            <div>\r\n              <input\r\n                name=\"img\"\r\n                onChange={this.fileChangedHandler}\r\n                type=\"file\"\r\n                style={{ width: \"100%\" }}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n\r\n          {/* <div className=\"form-group\">\r\n            <input\r\n              type=\"checkbox\"\r\n              style={{ marginRight: \"7px\", transform: \"translateY(1px)\" }}\r\n              // checked={!this.state.isStudent}\r\n              // onChange={this.handleStudentChange}\r\n              onChange={() => {\r\n                console.log(this.state);\r\n                this.setState({ isStudent: !this.state.isStudent });\r\n              }}\r\n              defaultChecked={!this.state.isStudent}\r\n            />\r\n            <label>I'm a student</label>\r\n          </div> */}\r\n\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-dark\"\r\n              style={{ width: \"50%\" }}\r\n            >\r\n              Post Job\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormTwo;\r\n"]},"metadata":{},"sourceType":"module"}