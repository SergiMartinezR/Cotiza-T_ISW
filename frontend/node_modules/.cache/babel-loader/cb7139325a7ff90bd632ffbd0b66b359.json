{"ast":null,"code":"var _jsxFileName = \"/home/sergi/Documents/Repos/Reps/LinkedIn-clone/Front-End/src/routes/Message/MessageWindow.js\";\nimport React, { Component } from \"react\";\nimport defaultUserPic from \"../../assets/defaultProfilePic.png\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { connect } from \"react-redux\";\n\nconst Message = ({\n  text,\n  senderId,\n  user,\n  otherUserPicture,\n  myPic\n}) => {\n  let self = false;\n  let MyId = localStorage.getItem('profileID');\n\n  if (MyId == senderId) {\n    self = true;\n  }\n\n  if (!self) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message other-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: otherUserPicture,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, user), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, text)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message self-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, user), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, text)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: myPic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n};\n\nlet accessToken = localStorage.getItem(\"accessToken\");\n\nclass MessageWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chatId: this.props.chatId,\n      // messages: this.props.messages,\n      messages: [],\n      typedMsg: \"\",\n      counter: 0,\n      chatId: this.props.chatId\n    };\n    this.client = new W3CWebSocket(`ws://b84202b00c82.ngrok.io/ws/chat/${localStorage.getItem('profileID')}/${this.state.chatId}/`);\n\n    this.onButtonClick = e => {\n      e.preventDefault();\n      console.log(\"Send msg!\");\n      this.client.send(JSON.stringify({\n        // message: this.state.typedMsg,\n        text: this.state.typedMsg // is_my_msg: true,\n\n      }));\n      this.setState({\n        typedMsg: \"\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state); // const messageWindow = this.messageWindow.current;\n    // if (messageWindow !== null) {\n    //   messageWindow.scrollTop =\n    //     messageWindow.scrollHeight - messageWindow.clientHeight;\n    // }\n\n    this.client.onopen = () => {\n      console.log(\"WebSocket Client Connected\");\n    };\n\n    this.setState({\n      counter: 0\n    });\n\n    this.client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log(\"got reply! \", dataFromServer);\n      console.log(this.state.counter);\n\n      if (this.state.counter === 0) {\n        let msgs = dataFromServer.messages;\n        this.setState({\n          messages: msgs.reverse(),\n          counter: 1\n        });\n      } // if(this.state.counter !== 0){\n      else {\n          let newMsg = dataFromServer;\n          let newMsgArray = this.state.messages;\n          newMsgArray.push(newMsg); // this.setState({newMsgArray});\n\n          this.setState({\n            messages: newMsgArray\n          });\n          console.log(this.state.messages);\n        } // let newMsg = dataFromServer;\n      // let newMessages = this.state.messages;\n      // newMessages.push(newMsg);\n      // this.setState({ messages: newMessages });\n      // let oldMsg = [];\n      // if (this.state.counter === 0) {\n      //   dataFromServer.messages.map((item) => {\n      //     oldMsg = this.state.messages;\n      //     oldMsg.push(item);\n      //   });\n      //   this.setState({ messages: newMessages });\n      // }\n      // dataFromServer.messages.map((item) => {\n      //   let newMessages = this.state.messages;\n      //   newMessages.push(item);\n      //   // this.setState((state) => ({\n      //   //   messages: [\n      //   //     ...state.messages,\n      //   //     {\n      //   //       msg: item.content,\n      //   //       user: item.sender,\n      //   //       owner: item.owner,\n      //   //     },\n      //   //   ],\n      //   // }));\n      //   this.setState({ messages: newMessages });\n      // });\n\n    };\n  }\n\n  render() {\n    if (this.props.user === null) {\n      return /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 14\n        }\n      }, \"Iniial screen\");\n    }\n\n    let headerPic = this.props.user.user_avatar;\n\n    if (headerPic === null) {\n      headerPic = defaultUserPic;\n    }\n\n    let myPic = null;\n\n    if (this.props.data !== null && this.props.data !== undefined) {\n      myPic = this.props.data.img;\n    }\n\n    if (myPic === null) {\n      myPic = defaultUserPic;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msgWindowHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: headerPic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, this.props.user.user_name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"msgWindowScreen\",\n      ref: this.messageWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, this.state.messages.map((msg, index) => {\n      // if(index === this.state.messages.length - 1){\n      //   return null;\n      // }\n      return /*#__PURE__*/React.createElement(Message, {\n        myPic: myPic,\n        userPic: headerPic,\n        text: msg.text,\n        senderId: msg.sender_id,\n        user: msg.sender,\n        otherUserPicture: headerPic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Send message...\",\n      value: this.state.typedMsg,\n      onChange: e => this.setState({\n        typedMsg: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.onButtonClick,\n      className: \"sendMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-paper-plane\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.prof.userData\n  };\n};\n\nexport default connect(mapStateToProps)(MessageWindow);","map":{"version":3,"sources":["/home/sergi/Documents/Repos/Reps/LinkedIn-clone/Front-End/src/routes/Message/MessageWindow.js"],"names":["React","Component","defaultUserPic","w3cwebsocket","W3CWebSocket","connect","Message","text","senderId","user","otherUserPicture","myPic","self","MyId","localStorage","getItem","accessToken","MessageWindow","state","chatId","props","messages","typedMsg","counter","client","onButtonClick","e","preventDefault","console","log","send","JSON","stringify","setState","componentDidMount","onopen","onmessage","message","dataFromServer","parse","data","msgs","reverse","newMsg","newMsgArray","push","render","headerPic","user_avatar","undefined","img","user_name","messageWindow","map","msg","index","sender_id","sender","target","value","mapStateToProps","prof","userData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport defaultUserPic from \"../../assets/defaultProfilePic.png\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Message = ({ text, senderId, user, otherUserPicture, myPic }) => {\r\n  let self = false;\r\n  let MyId = localStorage.getItem('profileID');\r\n  if (MyId == senderId) {\r\n    self = true;\r\n  }\r\n\r\n  if (!self) {\r\n    return (\r\n      <div className=\"message other-message\">\r\n        <div>\r\n          <img src={otherUserPicture} />\r\n        </div>\r\n        <div className=\"message-text\">\r\n          <span>{user}</span>\r\n          <h6>{text}</h6>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"message self-message\">\r\n      <div className=\"message-text\">\r\n        <span>{user}</span>\r\n        <h6>{text}</h6>\r\n      </div>\r\n      <div>\r\n        <img src={myPic} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet accessToken = localStorage.getItem(\"accessToken\");\r\n\r\nclass MessageWindow extends Component {\r\n  // constructor(props) {\r\n  //   super();\r\n  //   this.state = {\r\n  //     chatId : props.user.profileID\r\n  //   }\r\n  // this.messageWindow = React.createRef();\r\n  // }\r\n\r\n  state = {\r\n    chatId: this.props.chatId,\r\n    // messages: this.props.messages,\r\n    messages: [],\r\n    typedMsg: \"\",\r\n    counter: 0,\r\n    chatId: this.props.chatId, \r\n  };\r\n\r\n  // client = null;\r\n  // if(this.props.user.profileID !== null){\r\n  client = new W3CWebSocket(`ws://b84202b00c82.ngrok.io/ws/chat/${localStorage.getItem('profileID')}/${this.state.chatId}/`);\r\n  // }\r\n\r\n  onButtonClick = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Send msg!\");\r\n    this.client.send(\r\n      JSON.stringify({\r\n        // message: this.state.typedMsg,\r\n        text: this.state.typedMsg,\r\n        // is_my_msg: true,\r\n      })\r\n    );\r\n    this.setState({ typedMsg: \"\" });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.state);\r\n    // const messageWindow = this.messageWindow.current;\r\n    // if (messageWindow !== null) {\r\n    //   messageWindow.scrollTop =\r\n    //     messageWindow.scrollHeight - messageWindow.clientHeight;\r\n    // }\r\n    this.client.onopen = () => {\r\n      console.log(\"WebSocket Client Connected\");\r\n    };\r\n    this.setState({counter : 0});\r\n    this.client.onmessage = (message) => {\r\n      const dataFromServer = JSON.parse(message.data);\r\n      console.log(\"got reply! \", dataFromServer);\r\n\r\n      console.log(this.state.counter);\r\n\r\n      if(this.state.counter === 0){\r\n        let msgs = dataFromServer.messages;\r\n        this.setState({messages : msgs.reverse(),counter : 1});\r\n      }\r\n      // if(this.state.counter !== 0){\r\n      else{\r\n        let newMsg = dataFromServer;\r\n        let newMsgArray = this.state.messages;\r\n        newMsgArray.push(newMsg);\r\n        // this.setState({newMsgArray});\r\n        this.setState({messages : newMsgArray})\r\n        console.log(this.state.messages);\r\n      }\r\n\r\n      // let newMsg = dataFromServer;\r\n      // let newMessages = this.state.messages;\r\n      // newMessages.push(newMsg);\r\n      // this.setState({ messages: newMessages });\r\n\r\n      // let oldMsg = [];\r\n      // if (this.state.counter === 0) {\r\n      //   dataFromServer.messages.map((item) => {\r\n      //     oldMsg = this.state.messages;\r\n      //     oldMsg.push(item);\r\n      //   });\r\n      //   this.setState({ messages: newMessages });\r\n      // }\r\n\r\n      // dataFromServer.messages.map((item) => {\r\n      //   let newMessages = this.state.messages;\r\n      //   newMessages.push(item);\r\n      //   // this.setState((state) => ({\r\n      //   //   messages: [\r\n      //   //     ...state.messages,\r\n      //   //     {\r\n      //   //       msg: item.content,\r\n      //   //       user: item.sender,\r\n      //   //       owner: item.owner,\r\n      //   //     },\r\n      //   //   ],\r\n      //   // }));\r\n      //   this.setState({ messages: newMessages });\r\n      // });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (this.props.user === null) {\r\n      return <h6>Iniial screen</h6>;\r\n    }\r\n\r\n    let headerPic = this.props.user.user_avatar;\r\n    if (headerPic === null) {\r\n      headerPic = defaultUserPic;\r\n    }\r\n\r\n    let myPic = null;\r\n    if (this.props.data !== null && this.props.data !== undefined) {\r\n      myPic = this.props.data.img;\r\n    }\r\n    if (myPic === null) {\r\n      myPic = defaultUserPic;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"msgWindowHeader\">\r\n          <img src={headerPic} />\r\n          <h6>{this.props.user.user_name}</h6>\r\n        </div>\r\n        <div className=\"msgWindowScreen\" ref={this.messageWindow}>\r\n          {this.state.messages.map((msg,index) => {\r\n            // if(index === this.state.messages.length - 1){\r\n            //   return null;\r\n            // }\r\n            return (\r\n              <Message\r\n                myPic={myPic}\r\n                userPic={headerPic}\r\n                text={msg.text}\r\n                senderId={msg.sender_id}\r\n                user={msg.sender}\r\n                otherUserPicture={headerPic}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        {/* <InputBar /> */}\r\n\r\n        <div className=\"input-bar\">\r\n          <form onSubmit={this.onButtonClick}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Send message...\"\r\n              value={this.state.typedMsg}\r\n              onChange={(e) => this.setState({ typedMsg: e.target.value })}\r\n            />\r\n          </form>\r\n          <div onClick={this.onButtonClick} className=\"sendMessage\">\r\n            <i class=\"fas fa-paper-plane\"></i>\r\n            {/* <i class=\"fas fa-location-arrow\"></i> */}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.prof.userData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MessageWindow);\r\n"]},"metadata":{},"sourceType":"module"}