{"ast":null,"code":"var _jsxFileName = \"/home/sergi/Documents/Repos/My_Repos/Cotiza-T_ISW/frontend/src/routes/Profile/ProfileComponents/Experience/Modals/AddExperience.js\";\nimport React, { Component } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"; // import DatePicker from \"react-date-picker\";\n\nimport \"../Experience.css\";\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n  // console.log('Val :')\n\n  Object.values(rest).forEach(val => {//   // if(val !== 'selectedFile'){\n    //     val === null && (valid = false);\n    //   // }\n  });\n  return valid;\n};\n\nclass AddExperience extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      position: null,\n      industry: null,\n      startDate: new Date(),\n      endDate: new Date(),\n      selectedFile: null,\n      compLogo: null,\n      headline: false,\n      formErrors: {\n        position: \"\",\n        industry: \"\",\n        startDate: \"\",\n        endDate: \"\"\n      }\n    };\n\n    this.fileChangedHandler = event => {\n      this.setState({\n        selectedFile: event.target.files[0],\n        compLogo: URL.createObjectURL(event.target.files[0])\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        setTimeout(() => {\n          this.props.hideModal();\n          this.props.addExperience(this.state);\n        }, 1000);\n        console.log(this.state);\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"position\":\n          formErrors.position = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"industry\":\n          formErrors.industry = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n      show: true,\n      animation: false,\n      centered: true,\n      onHide: this.props.hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userAddAbout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"Add Experience!\"), /*#__PURE__*/React.createElement(\"i\", {\n      onClick: this.props.hideModal,\n      class: \"fas fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      encType: \"multipart/form-data\",\n      className: \"addExperienceModal\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, \"Position :\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: formErrors.position.length > 0 ? \"error form-control\" : \"form-control\",\n      autoComplete: \"off\",\n      name: \"position\",\n      placeholder: \"Your position\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    })), formErrors.position.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, formErrors.position)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, \"Institute/Industry :\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      className: formErrors.industry.length > 0 ? \"error form-control\" : \"form-control\",\n      name: \"industry\",\n      placeholder: \"Enter Institute or Industry\",\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    })), formErrors.industry.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, formErrors.industry)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group formTwoDateSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formTwoDates formTwoDateOne\",\n      style: {\n        marginRight: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"Start-Year :\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.startDate // onChange={(date) => this.changeStartDate(date)}\n      ,\n      onChange: date => this.setState({\n        startDate: date\n      }),\n      required: true,\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    })), formErrors.startDate.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, formErrors.startDate)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formTwoDates formTwoDateOne\",\n      style: {\n        marginRight: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, \"End-Year :\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.endDate,\n      onChange: date => this.setState({\n        endDate: date\n      }),\n      required: true,\n      dateFormat: \"dd/MM/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    })), formErrors.startDate.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, formErrors.endDate))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      style: {\n        marginRight: \"7px\",\n        height: 'fit-content',\n        transform: 'translatey(1px)'\n      } // checked={!this.state.isStudent}\n      // onChange={this.handleStudentChange}\n      ,\n      onChange: () => {\n        console.log(this.state);\n        this.setState({\n          headline: !this.state.headline\n        });\n      },\n      defaultChecked: this.state.headline,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        fontSize: '13px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    }, \"Make this my headline\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modalBottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"userCloseButton\",\n      onClick: this.props.hideModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"userSaveButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \"Add\"))))));\n  }\n\n}\n\nexport default AddExperience;","map":{"version":3,"sources":["/home/sergi/Documents/Repos/My_Repos/Cotiza-T_ISW/frontend/src/routes/Profile/ProfileComponents/Experience/Modals/AddExperience.js"],"names":["React","Component","Modal","DatePicker","formValid","formErrors","rest","valid","Object","values","forEach","val","length","AddExperience","state","position","industry","startDate","Date","endDate","selectedFile","compLogo","headline","fileChangedHandler","event","setState","target","files","URL","createObjectURL","handleSubmit","e","preventDefault","setTimeout","props","hideModal","addExperience","console","log","error","handleChange","name","value","render","marginRight","date","height","transform","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n// import DatePicker from \"react-date-picker\";\r\nimport \"../Experience.css\";\r\n\r\nconst formValid = ({ formErrors, ...rest }) => {\r\n  let valid = true;\r\n\r\n  // validate form errors being empty\r\n  Object.values(formErrors).forEach((val) => {\r\n    val.length > 0 && (valid = false);\r\n  });\r\n\r\n  // validate the form was filled out\r\n  // console.log('Val :')\r\n  Object.values(rest).forEach((val) => {\r\n    //   // if(val !== 'selectedFile'){\r\n    //     val === null && (valid = false);\r\n    //   // }\r\n  });\r\n\r\n  return valid;\r\n};\r\n\r\nclass AddExperience extends Component {\r\n  state = {\r\n    position: null,\r\n    industry: null,\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    selectedFile: null,\r\n    compLogo: null,\r\n    headline: false,\r\n    formErrors: {\r\n      position: \"\",\r\n      industry: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n    },\r\n  };\r\n\r\n  fileChangedHandler = (event) => {\r\n    this.setState({\r\n      selectedFile: event.target.files[0],\r\n      compLogo: URL.createObjectURL(event.target.files[0]),\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (formValid(this.state)) {\r\n      setTimeout(() => {\r\n        this.props.hideModal();\r\n        this.props.addExperience(this.state);\r\n      }, 1000);\r\n      console.log(this.state);\r\n    } else {\r\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    let formErrors = { ...this.state.formErrors };\r\n\r\n    switch (name) {\r\n      case \"position\":\r\n        formErrors.position =\r\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n        break;\r\n\r\n      case \"industry\":\r\n        formErrors.industry =\r\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({ formErrors, [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { formErrors } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Modal\r\n          show={true}\r\n          animation={false}\r\n          centered\r\n          onHide={this.props.hideModal}\r\n        >\r\n          <div className=\"userAddAbout\">\r\n            <h5>Add Experience!</h5>\r\n            <i onClick={this.props.hideModal} class=\"fas fa-times\"></i>\r\n            <form\r\n              encType=\"multipart/form-data\"\r\n              className=\"addExperienceModal\"\r\n              onSubmit={this.handleSubmit}\r\n            >\r\n              <div className=\"form-group\">\r\n                <div>\r\n                  <label>Position :</label>\r\n                  <br></br>\r\n                  <input\r\n                    type=\"text\"\r\n                    className={\r\n                      formErrors.position.length > 0\r\n                        ? \"error form-control\"\r\n                        : \"form-control\"\r\n                    }\r\n                    autoComplete=\"off\"\r\n                    name=\"position\"\r\n                    placeholder=\"Your position\"\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                {formErrors.position.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.position}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <div>\r\n                  <label>Institute/Industry :</label>\r\n                  <br></br>\r\n                  <input\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    className={\r\n                      formErrors.industry.length > 0\r\n                        ? \"error form-control\"\r\n                        : \"form-control\"\r\n                    }\r\n                    name=\"industry\"\r\n                    placeholder=\"Enter Institute or Industry\"\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                {formErrors.industry.length > 0 && (\r\n                  <span className=\"errorMessage\">{formErrors.industry}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"form-group formTwoDateSection\">\r\n                <div\r\n                  className=\"formTwoDates formTwoDateOne\"\r\n                  style={{ marginRight: \"40px\" }}\r\n                >\r\n                  <div>\r\n                    <label>Start-Year :</label>\r\n                    <br></br>\r\n                    <DatePicker\r\n                      selected={this.state.startDate}\r\n                      // onChange={(date) => this.changeStartDate(date)}\r\n                      onChange={(date) => this.setState({ startDate: date })}\r\n                      required={true}\r\n                      dateFormat=\"dd/MM/yyyy\"\r\n                    />\r\n                  </div>\r\n                  {formErrors.startDate.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.startDate}</span>\r\n                  )}\r\n                </div>\r\n\r\n                <div\r\n                  className=\"formTwoDates formTwoDateOne\"\r\n                  style={{ marginRight: \"40px\" }}\r\n                >\r\n                  <div>\r\n                    <label>End-Year :</label>\r\n                    <br></br>\r\n                    <DatePicker\r\n                      selected={this.state.endDate}\r\n                      onChange={(date) => this.setState({ endDate: date })}\r\n                      required={true}\r\n                      dateFormat=\"dd/MM/yyyy\"\r\n                    />\r\n                  </div>\r\n                  {formErrors.startDate.length > 0 && (\r\n                    <span className=\"errorMessage\">{formErrors.endDate}</span>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* <div className=\"form-group\">\r\n                <label>Institute Logo : </label>\r\n                <br></br>\r\n                <div>\r\n                  <input\r\n                    name=\"img\"\r\n                    onChange={this.fileChangedHandler}\r\n                    type=\"file\"\r\n                    style={{ width: \"100%\" }}\r\n                  ></input>\r\n                </div>\r\n              </div> */}\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  style={{ marginRight: \"7px\" , height:'fit-content', transform:'translatey(1px)'}}\r\n                  // checked={!this.state.isStudent}\r\n                  // onChange={this.handleStudentChange}\r\n                  onChange={() => {\r\n                    console.log(this.state);\r\n                    this.setState({ headline: !this.state.headline });\r\n                  }}\r\n                  defaultChecked={this.state.headline}\r\n                />\r\n                <label style={{fontSize:'13px'}}>Make this my headline</label>\r\n              </div>\r\n\r\n              <div className=\"modalBottom\">\r\n                <h6 className=\"userCloseButton\" onClick={this.props.hideModal}>\r\n                  Close\r\n                </h6>\r\n                <button type=\"submit\" className=\"userSaveButton\">\r\n                  Add\r\n                </button>\r\n                {/* <h6 type='submit' className=\"userSaveButton\">Save</h6> */}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddExperience;\r\n"]},"metadata":{},"sourceType":"module"}